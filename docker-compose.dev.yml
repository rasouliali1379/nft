version: "3.7"

services:
  # -----------------------------
  # base fiber service
  # -----------------------------
  nft:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/go/src/application
    networks:
      - customnetwork
    depends_on:
      - jaeger
      - postgres
    ports:
      - 1212:8080
      - 1213:8081

  # -----------------------------
  # jaeger servcie 
  # -----------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.20
    ports:
      - "1214:6831/udp"
      - "1215:16686"
    networks:
      - customnetwork

  # -----------------------------
  # redis database
  # -----------------------------
  # redis:
  #   hostname: redis
  #   image: redis
  #   networks:
  #     - customnetwork

  # # -----------------------------
  # # redis UI
  # # -----------------------------
  # redis-commander:
  #   hostname: redis-commander
  #   image: rediscommander/redis-commander:latest
  #   restart: always
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #   ports:
  #     - "9251:8081"
  #   networks:
  #     - customnetwork

  # -----------------------------
  # postgres database
  # -----------------------------
  postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - psql-nftasset:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: e35YtGPSz6agLyJH
      POSTGRES_USER: nftadmin
      POSTGRES_DB: nftasset
    ports:
      - "5432:5432"
    networks:
      - customnetwork

  # minio:
  #   image: minio/minio:latest
  #   volumes:
  #     - data1-1:/data1
  #     - data1-2:/data2
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     MINIO_ACCESS_KEY: minio
  #     MINIO_SECRET_KEY: minio123
  #   command: server data1
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:9000/minio/health/live"
  #       ]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  # -----------------------------
  # logstash
  # -----------------------------
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.16.2
  #   restart: unless-stopped
  #   networks: 
  #     - customnetwork

  # -----------------------------
  # networks
  # -----------------------------
networks:
  customnetwork:
    external: true
# -----------------------------
# volumes
# -----------------------------
volumes:
  psql-nft:
    driver: local
  data1-1:
  data1-2:
